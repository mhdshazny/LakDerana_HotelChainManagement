@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<LakDerana_HotelChainManagement.ViewModels.BarViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}




<!-- Breadcrumb -->
<ol class="breadcrumb">
    <li class="breadcrumb-item">Bars</li>
    <li class="breadcrumb-item active">Manage Bars</li>

    <!-- Breadcrumb Menu-->
    <li class="breadcrumb-menu d-md-down-none">
        <div class="btn-group" role="group" aria-label="Button group">
            <a class="btn" href="#"><i class="icon-speech"></i></a>
            <a class="btn" href="./"><i class="fa fa-bar-chart"></i> &nbsp;Manage Bar</a>
        </div>
    </li>
</ol>

<div class="container-fluid">
    <h2>Manage Bars</h2>
    <hr />
    <div class="card">
        <div class="card-body">
            <h5 class="pull-right">@ViewBag.ReturnMsg <i class="fa fa-check-circle"></i></h5>
            @if (ViewBag.InOut == "Up")
            {
                @await Html.PartialAsync("Edit", new LakDerana_HotelChainManagement.ViewModels.BarViewModel())

            }
            else if (ViewBag.InOut == "In")
            {
                @await Html.PartialAsync("Create", new LakDerana_HotelChainManagement.ViewModels.BarViewModel())

            }

        </div>
    </div>


    <hr />

    <div class="card">
        <div class="card-body">
            <h4>All Bars</h4><hr />

            <table class="table table-responsive" id="IndexTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.HotelID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmpUpdatedBy)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IncomeExpenseUpdatedDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Expense)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Sales)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.HotelID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EmpUpdatedBy)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IncomeExpenseUpdatedDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Expense)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Sales)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.ID"><i class="fa fa-edit fa-lg"></i></a> |
                                <a asp-action="Details" asp-route-id="@item.ID"><i class="fa fa-info fa-lg"></i></a>

                                @if (@HttpContextAccessor.HttpContext.Session.GetString("UserType") == "System Administrator")
                                {

                                    <a href="#" onclick="ConfirmDelete('@item.ID')">|<i class="fa fa-remove fa-lg"></i></a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

<script>

    function ConfirmDelete(e) {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-danger m-2',
                cancelButton: 'btn btn-info m-2'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: "/Bar/Delete",
                    data: { id: e },
                    success: function (result) {
                        if (result == "Success") {
                            swalWithBootstrapButtons.fire(
                                'Success',
                                'Your Data is Deleted :)',
                                'Success'
                            ).then((res) => {
                                if (res.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            swalWithBootstrapButtons.fire(
                                'Error',
                                'Your Data is safe :)',
                                'error'
                            )
                        }
                    }
                })

            }
            else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                //swalWithBootstrapButtons.fire(
                //    'Cancelled',
                //    'Your data is safe :)',
                //    'error'
                //)
            }
        })
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}